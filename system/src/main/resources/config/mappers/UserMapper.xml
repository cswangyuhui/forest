<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.forest.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.forest.pojo.User">
    <id column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="user_token" jdbcType="VARCHAR" property="userToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  
  <resultMap id="UserInfResultMap" type="com.forest.pojo.User">
  	<id column="email" jdbcType="VARCHAR" property="email" />
  	<result column="name" jdbcType="VARCHAR" property="name" />
  	<result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    email, password, name, user_token, create_time, role
  </sql>
  <select id="selectByExample" parameterType="com.forest.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where email = #{email,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where email = #{email,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.forest.pojo.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.forest.pojo.User">
    insert into user (email,password, name, user_token, 
      create_time)
    values (#{email,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{userToken,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertNewUser" parameterType="com.forest.pojo.User">
    insert into user (email,password, name, user_token, 
      create_time)
    values (#{email,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{userToken,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.forest.pojo.User">
    <selectKey keyProperty="email" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="userToken != null">
        user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="userToken != null">
        #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <select id="getUserByToken" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" /> 
		from user
        where user_token = #{userToken}
  </select>
  
  <select id="getUserByName" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" /> 
		from user
        where name = #{username}
  </select>
  
  <select id="countByExample" parameterType="com.forest.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.userToken != null">
        user_token = #{record.userToken,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      user_token = #{record.userToken,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.forest.pojo.User">
    update user
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="userToken != null">
        user_token = #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where email = #{email,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.forest.pojo.User">
    update user
    set password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      user_token = #{userToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where email = #{email,jdbcType=VARCHAR}
  </update>
  
  <update id="updateUserToken">
        update user set user_token = #{newToken} where email =#{userEmail}
  </update>
  
  <update id="updateUserByName">
        update user set password = #{newPassword} where name =#{username}
  </update> 
   	<select id="findUser"  resultMap="UserInfResultMap" parameterType="Map">
        select email,name,role from user 
        <if test="limit != null and start != null">limit #{start},#{limit}</if>
	</select>

	<select id="getTotalUser" resultType="int">
       select count(*) from user
	</select>
	<update id="changeUserRole">
		update user set role = #{role} where email =#{email}
	</update>
</mapper>